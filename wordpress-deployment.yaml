
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: wordpress-gateway
  namespace: wordpress
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: webserver-vsvc
  namespace: wordpress
spec:
  hosts:
  - "*"
  gateways:
  - wordpress/wordpress-gateway
  http:
  - match:
    - port: 80
    route:
    - destination:
        port:
          number: 80
        host: webserver.wordpress.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  namespace: wordpress
  name: webserver
  labels:
    app: webserver
spec:
  ports:
    - port: 80
  selector:
    app: webserver
    tier: frontend
  type: ClusterIP

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  namespace: wordpress
  name: webserver
  labels:
    app: webserver
spec:
  selector:
    matchLabels:
      app: webserver
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: webserver
        tier: frontend
    spec:
      containers:
      - image: wordpress:4.8-apache
        name: webserver
        env:
        - name: WORDPRESS_DB_HOST
          value: 172.26.160.3
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dbpassword
              key: dbpassword
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim-2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: wordpress
  name: wp-pv-claim-2
  labels:
    app: webserver
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
